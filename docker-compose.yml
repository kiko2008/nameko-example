version: '3.4'

services:
  api:
    image: nameko/api
    container_name: nameko.api
    hostname: api
    ports:
    - "8080:8080"
    restart: always
    links:
    - rabbit
    - service
    - service_persist
    environment:
    - ENV=1
    - FLASK_APP=app.py
    - FLASK_DEBUG=1
    build:
      context: ./api
      dockerfile: .docker/Dockerfile-api
    #volumes:
    #- ./api:/usr/src/app:ro
    command: flask run --host=0.0.0.0 --port 8080
  service:
    container_name: nameko.service
    image: nameko/service
    restart: always
    build:
      context: ./service
      dockerfile: .docker/Dockerfile-service
    command: /bin/bash run.sh
  service_persist:
    container_name:  nameko.service_persist
    image: nameko/service_persist
    restart: always
    build:
      context: ./service_persist
      dockerfile: .docker/Dockerfile-service
    command: /bin/bash run.sh
  rabbit:
    container_name: nameko.rabbit
    image: rabbitmq:3-management
    restart: always
    ports:
    - "15672:15672"
    - "5671:5672"
#    environment:
#      RABBITMQ_ERLANG_COOKIE:
#      RABBITMQ_DEFAULT_VHOST: /
#      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
#      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
#  pg:
#    container_name: nameko.pg
#    image: nameko/pg
#    restart: always
#    build:
#      context: ./pg
#      dockerfile: .docker/Dockerfile-pg
    #ports:
    #- "5432:5432"
#    environment:
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_DB: ${POSTGRES_DB}
#      PGDATA: /var/lib/postgresql/data/pgdata




#version: '3.4'
#services:
#  api:
#    build: ./api
#    restart: always
#    ports:
#     - "5001:5000"
#    links:
#    - rabbitmq
#    - service
#    - service_persist
#  service:
#    build: ./service
#    restart: always
#    depends_on:
#     - rabbitmq
#  service_persist:
#    build: ./service_persist
#    restart: always
#    depends_on:
#     - rabbitmq
#  rabbitmq:
#    container_name: nameko.rabbit
#    image: rabbitmq:3-management
#    restart: always
#    ports:
#     - "15672:15672"
#     - "5671:5672"
